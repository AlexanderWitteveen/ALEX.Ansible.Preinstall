---

- name: Ensure CA certificate folder exists
  file:
    path: "/usr/share/ca-certificates/{{ args_basename }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy CA certificates
  copy:
    src: "{{ args_certificates_sources }}/{{ args_certificates_ca }}.cer"
    dest: "/usr/share/ca-certificates/{{ args_basename }}/{{ args_certificates_ca }}.cer"
    owner: root
    group: root
    mode: 0755
  register: cacertresult1

- name: Extend CA certficiate configuration
  shell: 'if [ ! ` cat /etc/ca-certificates.conf | grep "{{ args_basename }}/{{ args_certificates_ca }}.cer" ` ]; then echo "{{ args_basename }}/{{ args_certificates_ca }}.cer" >> /etc/ca-certificates.conf; echo "changedtrue"; else echo "changedfalse"; fi'
  args:
    executable: /bin/bash
  register: cacertresult2
  changed_when:
  - '"changedtrue" in cacertresult2.stdout'

- name: Add CA Certificate
  shell: update-ca-certificates
  args:
    executable: /bin/bash
  when: cacertresult1.changed or ("changedtrue" in cacertresult2.stdout)

- name: Ensure certificate folder exists
  file:
    path: "/{{ args_basename }}/certificates"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Install a list of packages
  apt:
    deb: https://dl.step.sm/gh-release/cli/docs-ca-install/v0.23.1/step-cli_0.23.1_amd64.deb
    state: present

- name: Check if key present
  shell: |
    ls "/{{ args_basename }}/certificates/host.crt" 2> /dev/null
    if [ $? != "0" ] ; then
      echo absent
    fi
  args:
    executable: /bin/bash
  register: certresult
  changed_when: "false"

- name: Create keys, certificate
  block:
    - name: create key
      shell: |
        step crypto keypair \
          "/{{ args_basename }}/certificates/host.pub" \
          "/{{ args_basename }}/certificates/host.key" \
          --kty=RSA \
          --size=2048 \
          --force --no-password --insecure
      args:
        executable: /bin/bash

    - name: create certificate signing request
      shell: |
        step certificate create \
          --csr \
          --key "/{{ args_basename }}/certificates/host.key" \
          "{{ args_description }}" \
          "/{{ args_basename }}/certificates/host.csr" \
          --san {{ args_hostname }} \
          --san {{ args_hostname }}.{{ args_dns_local }} \
          --san localhost \
          --san {{ args_dhcpipaddress }} \
          --force
      args:
        executable: /bin/bash

    - name: Copy CSR
      ansible.builtin.fetch:
        src: "/{{ args_basename }}/certificates/host.csr"
        dest: "/tmp/{{ args_hostname }}.csr"
        flat: yes

    - name: Sign certificate
      shell: |
        step certificate sign \
        "/tmp/{{ args_hostname }}.csr" \
        "{{ args_certificates_sources }}/{{ args_certificates_ca }}.cer" \
        "{{ args_certificates_sources }}/{{ args_certificates_ca }}.key" \
        --set CommonName={{ args_hostname }} \
        --template "{{ args_certificates_sources }}/{{ args_certificates_server_template }}" \
        --set-file "{{ args_certificates_sources }}/{{ args_certificates_org_settings }}" \
        --not-after 8766h \
        --bundle > "/tmp/{{ args_hostname }}.cer"
      args:
        executable: /bin/bash
      connection: local

    - name: Copy certificate
      copy:
        src: "/tmp/{{ args_hostname }}.cer"
        dest: "/{{ args_basename }}/certificates/host.cer"
        owner: root
        group: root
        mode: 0755

  when: '"absent" in certresult.stdout'

- name: Ensure home data folder exists
  file:
    path: "/home/{{ args_admin_username }}/.{{ args_basename }}" 
    state: directory
    owner: "{{ args_admin_username }}"
    group: "{{ args_admin_groupname }}"
    mode: 0755

###### TODO rethink if OK 
- name: Copy ssh certificates 2 
  copy:
    src: "~/.ssh"
    dest: "/home/{{ args_admin_username }}"
    owner: "{{ args_admin_username }}"
    group: "{{ args_admin_groupname }}"
    mode: 0700
